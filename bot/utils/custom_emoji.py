"""Utilities for working with custom emoji in Telegram"""

import re
import logging
from typing import List, Tuple, Optional
from pyrogram import types
from bot.utils.emoji_mapper import get_custom_emoji_id, has_custom_emoji

logger = logging.getLogger(__name__)


def find_emoji_positions(text: str) -> List[Tuple[str, int, int]]:
    """
    –ù–∞–π—Ç–∏ –≤—Å–µ —ç–º–æ–¥–∑–∏ –≤ —Ç–µ–∫—Å—Ç–µ –∏ –∏—Ö –ø–æ–∑–∏—Ü–∏–∏

    Args:
        text: –¢–µ–∫—Å—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞

    Returns:
        –°–ø–∏—Å–æ–∫ –∫–æ—Ä—Ç–µ–∂–µ–π (emoji, start_position, end_position)
    """
    # –†–µ–≥—É–ª—è—Ä–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –ø–æ–∏—Å–∫–∞ —ç–º–æ–¥–∑–∏
    emoji_pattern = re.compile(
        "["
        "\U0001F600-\U0001F64F"  # emoticons
        "\U0001F300-\U0001F5FF"  # symbols & pictographs
        "\U0001F680-\U0001F6FF"  # transport & map symbols
        "\U0001F700-\U0001F77F"  # alchemical symbols
        "\U0001F780-\U0001F7FF"  # Geometric Shapes Extended
        "\U0001F800-\U0001F8FF"  # Supplemental Arrows-C
        "\U0001F900-\U0001F9FF"  # Supplemental Symbols and Pictographs
        "\U0001FA00-\U0001FA6F"  # Chess Symbols
        "\U0001FA70-\U0001FAFF"  # Symbols and Pictographs Extended-A
        "\U00002702-\U000027B0"  # Dingbats
        "\U000024C2-\U0001F251"
        "]+",
        flags=re.UNICODE
    )

    emoji_list = []
    for match in emoji_pattern.finditer(text):
        emoji = match.group()
        start = match.start()
        end = match.end()
        emoji_list.append((emoji, start, end))

    return emoji_list


def create_custom_emoji_entities(text: str) -> Tuple[str, Optional[List[types.MessageEntity]]]:
    """
    –°–æ–∑–¥–∞—Ç—å entities –¥–ª—è –∫–∞—Å—Ç–æ–º–Ω—ã—Ö —ç–º–æ–¥–∑–∏ –≤ —Ç–µ–∫—Å—Ç–µ
    """
    logger.info(f"üîç create_custom_emoji_entities –≤—ã–∑–≤–∞–Ω–∞ –¥–ª—è —Ç–µ–∫—Å—Ç–∞: {text}")

    emoji_positions = find_emoji_positions(text)

    logger.info(f"üîç –ù–∞–π–¥–µ–Ω–æ —ç–º–æ–¥–∑–∏: {emoji_positions}")

    if not emoji_positions:
        logger.info("üîç –≠–º–æ–¥–∑–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
        return text, None

    entities = []

    for emoji, start, end in emoji_positions:
        custom_emoji_id = get_custom_emoji_id(emoji)

        logger.info(f"üîç –≠–º–æ–¥–∑–∏ '{emoji}' -> custom_id: {custom_emoji_id}")

        if custom_emoji_id:
            entity = types.MessageEntity(
                type=types.enums.MessageEntityType.CUSTOM_EMOJI,
                offset=start,
                length=end - start,
                custom_emoji_id=custom_emoji_id
            )
            entities.append(entity)
            logger.info(f"‚úÖ –°–æ–∑–¥–∞–Ω entity –¥–ª—è —ç–º–æ–¥–∑–∏ '{emoji}' —Å ID {custom_emoji_id}")

    logger.info(f"üîç –í—Å–µ–≥–æ —Å–æ–∑–¥–∞–Ω–æ entities: {len(entities)}")
    return text, entities if entities else None


def format_signature_with_custom_emoji(emoji: str, name: str, position: str, extension: str) -> Tuple[str, Optional[List[types.MessageEntity]]]:
    """
    –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ–¥–ø–∏—Å—å –º–µ–Ω–µ–¥–∂–µ—Ä–∞ —Å –∫–∞—Å—Ç–æ–º–Ω—ã–º–∏ —ç–º–æ–¥–∑–∏

    Args:
        emoji: –û–±—ã—á–Ω—ã–π —ç–º–æ–¥–∑–∏ –º–µ–Ω–µ–¥–∂–µ—Ä–∞
        name: –ò–º—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞
        position: –î–æ–ª–∂–Ω–æ—Å—Ç—å –º–µ–Ω–µ–¥–∂–µ—Ä–∞
        extension: –î–æ–±–∞–≤–æ—á–Ω—ã–π –Ω–æ–º–µ—Ä

    Returns:
        –ö–æ—Ä—Ç–µ–∂ (signature_text, entities):
        - signature_text: –¢–µ–∫—Å—Ç –ø–æ–¥–ø–∏—Å–∏
        - entities: –°–ø–∏—Å–æ–∫ MessageEntity –¥–ª—è –∫–∞—Å—Ç–æ–º–Ω—ã—Ö —ç–º–æ–¥–∑–∏ –∏–ª–∏ None
    """
    signature = f"{emoji} {name}, {position}, –¥–æ–±. {extension}"
    return create_custom_emoji_entities(signature)


def format_card_with_custom_emoji(emoji: str, name: str, position: str, extension: str, username: Optional[str] = None) -> Tuple[str, Optional[List[types.MessageEntity]]]:
    """
    –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–∞—Ä—Ç–æ—á–∫—É –º–µ–Ω–µ–¥–∂–µ—Ä–∞ —Å –∫–∞—Å—Ç–æ–º–Ω—ã–º–∏ —ç–º–æ–¥–∑–∏

    Args:
        emoji: –û–±—ã—á–Ω—ã–π —ç–º–æ–¥–∑–∏ –º–µ–Ω–µ–¥–∂–µ—Ä–∞
        name: –ò–º—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞
        position: –î–æ–ª–∂–Ω–æ—Å—Ç—å –º–µ–Ω–µ–¥–∂–µ—Ä–∞
        extension: –î–æ–±–∞–≤–æ—á–Ω—ã–π –Ω–æ–º–µ—Ä
        username: Username –º–µ–Ω–µ–¥–∂–µ—Ä–∞ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)

    Returns:
        –ö–æ—Ä—Ç–µ–∂ (card_text, entities):
        - card_text: –¢–µ–∫—Å—Ç –∫–∞—Ä—Ç–æ—á–∫–∏
        - entities: –°–ø–∏—Å–æ–∫ MessageEntity –¥–ª—è –∫–∞—Å—Ç–æ–º–Ω—ã—Ö —ç–º–æ–¥–∑–∏ –∏–ª–∏ None
    """
    card_text = f"{emoji} **{name}**\n"
    card_text += f"_{position}_\n\n"
    card_text += f"üìû –î–æ–±–∞–≤–æ—á–Ω—ã–π: {extension}\n"

    if username:
        card_text += f"üí¨ Telegram: @{username}"

    return create_custom_emoji_entities(card_text)
